<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot</title>
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Poppins", sans-serif;
        }
        body {
            background: #E3F2FD;
            overflow: hidden;
        }
        .chatbot-toggler {
            position: fixed;
            bottom: 30px;
            right: 35px;
            height: 50px;
            width: 50px;
            border: none;
            outline: none;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 50%;
            background: #c40101;
            color: #fff;
            cursor: pointer;
            animation: bounce 1s infinite;
        }
        @keyframes bounce {
            0%, 100% {
                transform: translateY(0);
            }
            50% {
                transform: translateY(-10px);
            }
        }
        .chatbot {
            position: fixed;
            right: 35px;
            bottom: 90px;
            width: 360px;
            height: 65%;
            background: #fff;
            border-radius: 15px;
            opacity: 0;
            pointer-events: none;
            transform: scale(0.5);
            transition: all 0.2s ease;
            box-shadow: 0 0 128px rgba(0,0,0,0.1), 0 32px 64px -48px rgba(0,0,0,0.5);
        }
        body.show-chatbot .chatbot {
            opacity: 1;
            pointer-events: auto;
            transform: scale(1);
        }
        .chatbot header {
            padding: 16px 0;
            text-align: center;
            background: #f5f5f5;
            color: #666;
        }
        .chatbot .chatbox {
            padding: 20px;
            height: calc(100% - 120px);
            overflow-y: auto;
        }
        .chatbot .chat-input {
            position: absolute;
            bottom: 0;
            width: 100%;
            display: flex;
            gap: 5px;
            padding: 10px;
            background: #fff;
            border-top: 1px solid #ddd;
        }
        .chatbot .chat-input textarea {
            flex: 1;
            height: 50px;
            border: none;
            outline: none;
            resize: none;
        }
        .chatbot .chat-input span {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            background: #c40101;
            color: #fff;
            border-radius: 5px;
            cursor: pointer;
        }
        .chatbox .chat {
            display: flex;
            margin-bottom: 10px;
        }
        .chatbox .incoming {
            justify-content: flex-start;
        }
        .chatbox .outgoing {
            justify-content: flex-end;
        }
        .chatbox .chat p {
            max-width: 70%;
            padding: 10px;
            border-radius: 10px;
        }
        .chatbox .incoming p {
            background: #f2f2f2;
            color: #000;
        }
        .chatbox .outgoing p {
            background: #c40101;
            color: #fff;
        }
    </style>
</head>
<body>
    <button class="chatbot-toggler">ðŸ’¬</button>
    <div class="chatbot">
        <header>Chatbot</header>
        <ul class="chatbox"></ul>
        <div class="chat-input">
            <textarea placeholder="Enter a message..."></textarea>
            <span id="send-btn">âž¤</span>
        </div>
    </div>
    <script>
        const chatbotToggler = document.querySelector(".chatbot-toggler");
        const chatbox = document.querySelector(".chatbox");
        const chatInput = document.querySelector(".chat-input textarea");
        const sendChatBtn = document.querySelector("#send-btn");

        const API_URL = "http://localhost:5000/api/chatbot/GetResponse";  // Your Flask API URL

        // Create a new chat item (incoming or outgoing)
        const createChatLi = (message, className) => {
            const chatLi = document.createElement("li");
            chatLi.classList.add("chat", className);
            chatLi.innerHTML = `<p>${message}</p>`;
            return chatLi;
        };

        // Fetch bot response from the Flask API
        const fetchResponse = async (userMessage) => {
            try {
                const response = await fetch(API_URL, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ text: userMessage }),  // Send user input
                });

                if (!response.ok) {
                    throw new Error("API request failed");
                }

                const data = await response.json();
                return data.response || "Oops! Something went wrong. Please try again.";
            } catch (error) {
                console.error("Error occurred: ", error);
                return "Oops! Something went wrong. Please try again.";
            }
        };

        // Handle user chat and show responses
        const handleChat = async () => {
            const userMessage = chatInput.value.trim();
            if (!userMessage) return;

            chatInput.value = "";
            chatbox.appendChild(createChatLi(userMessage, "outgoing"));
            chatbox.scrollTo(0, chatbox.scrollHeight);

            const incomingChatLi = createChatLi("Thinking...", "incoming");
            chatbox.appendChild(incomingChatLi);
            chatbox.scrollTo(0, chatbox.scrollHeight);

            const response = await fetchResponse(userMessage);
            incomingChatLi.querySelector("p").textContent = response;
        };

        sendChatBtn.addEventListener("click", handleChat);
        chatInput.addEventListener("keydown", (e) => {
            if (e.key === "Enter" && !e.shiftKey) {
                e.preventDefault();
                handleChat();
            }
        });

        chatbotToggler.addEventListener("click", () => {
            document.body.classList.toggle("show-chatbot");
        });
    </script>
</body>
</html>


